//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsSqlDependancyBrowser {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MsSqlDependancyBrowser.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;{0}&lt;/title&gt;
        ///    &lt;script&gt;{1}&lt;/script&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;button id=&quot;connect&quot; onclick=&quot;postConnectionString()&quot;&gt;Connect&lt;/button&gt;
        ///    &lt;input id=&quot;connectionString&quot; /&gt;
        ///    &lt;pre&gt;{2}&lt;/pre&gt;
        ///&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select from where order group by insert update delete merge into having exec with declare create function procedure return returns begin end as if while for set try catch drop table view union all case then when cross apply outerinner left join and or on else raiserror throw tran commit rollback pivot unpivot for cursor open is in not null over partition using values.
        /// </summary>
        internal static string keywords {
            get {
                return ResourceManager.GetString("keywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на function postConnectionString() {
        ///    var xhr = new XMLHttpRequest();
        ///    xhr.setRequestHeader(&apos;Content-Type&apos;, &apos;application/text&apos;)
        ///    xhr.open(&apos;POST&apos;, &apos;/connect&apos;, true);
        ///    xhr.onreadystatechange = function () {
        ///        if (xhr.readyState == 4) {
        ///            if (xhr.status == 200) {
        ///                alert(xhr.responseText);
        ///            }
        ///        }
        ///    };
        ///    xhr.send(document.getElementById(&quot;connectionString&quot;).value);
        ///}.
        /// </summary>
        internal static string postConnectionString {
            get {
                return ResourceManager.GetString("postConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT * 
        ///FROM (
        ///    SELECT DISTINCT A.referenced_entity_name, B.type_desc
        ///    FROM sys.dm_sql_referenced_entities(@objectFullName, &apos;OBJECT&apos;) A
        ///    LEFT JOIN sys.objects B ON A.referenced_id = B.object_id
        ///    WHERE A.referenced_id IS NOT NULL
        ///    ) A
        ///ORDER BY LEN(A.referenced_entity_name) desc;.
        /// </summary>
        internal static string queryObjectDependancies {
            get {
                return ResourceManager.GetString("queryObjectDependancies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT sp_text = B.definition,
        ///       sp_full_name = C.name + &apos;.&apos; + A.name,
        ///	   A.type_desc
        ///FROM sys.objects A
        /// LEFT JOIN sys.sql_modules B ON A.object_id = B.object_id
        ///INNER JOIN sys.schemas C ON A.schema_id = C.schema_id
        ///WHERE A.name = @objectName;.
        /// </summary>
        internal static string queryObjectInfo {
            get {
                return ResourceManager.GetString("queryObjectInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT  [column].name AS &apos;@columnName&apos;,
        ///		[type].name AS &apos;@typeName&apos;, 
        ///		[type].max_length AS &apos;@maxLength&apos;,
        ///		[type].precision &apos;@precision&apos;
        ///	FROM sys.tables as [table]
        ///	INNER JOIN sys.columns [column] ON [table].object_id = [column].object_id
        ///	INNER JOIN sys.types [type] ON [column].system_type_id = [type].system_type_id
        ///	WHERE [table].name = @objectName
        ///	FOR XML PATH(&apos;column&apos;), ROOT(&apos;table&apos;);.
        /// </summary>
        internal static string queryTableXml {
            get {
                return ResourceManager.GetString("queryTableXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///    xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; exclude-result-prefixes=&quot;msxsl&quot;&gt;
        ///    &lt;xsl:output method=&quot;xml&quot; indent=&quot;yes&quot;/&gt;  
        ///    &lt;xsl:template match=&quot;/&quot;&gt;
        ///      &lt;table border=&quot;1&quot;&gt;
        ///        &lt;tr&gt;
        ///          &lt;th&gt;Column Name&lt;/th&gt;
        ///          &lt;th&gt;Type Name&lt;/th&gt;
        ///          &lt;th&gt;Max Length&lt;/th&gt;
        ///          &lt;th&gt;Precision&lt;/th&gt;
        ///        &lt;/tr&gt;
        ///      &lt;xsl:for-each select=&quot;table/column&quot;&gt;
        ///        &lt;t [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string table2html {
            get {
                return ResourceManager.GetString("table2html", resourceCulture);
            }
        }
    }
}
